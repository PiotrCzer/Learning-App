/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nciapp;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 * NCI App
 * Sean Keeley
 * Maths Support Section
 */
public class Notes extends javax.swing.JFrame {
    private String subjectText ;
    private String noteText ;
    private int count;
    private Array ArrayMath[];
  
    /**
     * Creates new form Notes
     */
    public Notes() {
        initComponents();
        subjectText = new String ();
        noteText = new String();
        count = 0;
        ArrayMath = new Array[100];
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subjectLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        subjectTf = new javax.swing.JTextField();
        noteTf = new javax.swing.JTextField();
        noteLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        menuBar = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(374, 535));
        getContentPane().setLayout(null);

        subjectLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        subjectLabel.setForeground(new java.awt.Color(240, 240, 240));
        subjectLabel.setText("Subject:");
        getContentPane().add(subjectLabel);
        subjectLabel.setBounds(60, 140, 60, 17);

        addButton.setText("Add");
        addButton.setOpaque(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton);
        addButton.setBounds(10, 400, 60, 30);

        clearButton.setText("Clear");
        clearButton.setOpaque(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton);
        clearButton.setBounds(140, 400, 60, 30);

        displayButton.setText("Display");
        displayButton.setOpaque(false);
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });
        getContentPane().add(displayButton);
        displayButton.setBounds(260, 400, 80, 30);
        getContentPane().add(subjectTf);
        subjectTf.setBounds(60, 160, 240, 50);
        getContentPane().add(noteTf);
        noteTf.setBounds(50, 240, 270, 80);

        noteLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        noteLabel.setForeground(new java.awt.Color(240, 240, 240));
        noteLabel.setText("Note:");
        getContentPane().add(noteLabel);
        noteLabel.setBounds(50, 220, 40, 17);

        titleLabel.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(240, 240, 240));
        titleLabel.setText("         Take a quick Note!");
        getContentPane().add(titleLabel);
        titleLabel.setBounds(50, 20, 270, 40);

        backButton.setContentAreaFilled(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(0, 460, 50, 40);

        homeButton.setContentAreaFilled(false);
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(homeButton);
        homeButton.setBounds(150, 463, 60, 40);

        menuBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nciapp/menuBar.png"))); // NOI18N
        getContentPane().add(menuBar);
        menuBar.setBounds(0, 450, 360, 50);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nciapp/wallpaper3.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 360, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        GUIMathSupport myMaths = new GUIMathSupport ();
        myMaths.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        GUIMainMenu myMenu = new GUIMainMenu ();
        myMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
 
        subjectText = subjectTf.getText();
        noteText = noteTf.getText();
        
        Array arrMath = new Array();
        
        arrMath.setSubjectText(subjectText);
        arrMath.setNoteText(noteText);
        
        
        ArrayMath[count] = arrMath;
        count++;
        //reading the two fields of text back into a created text file called Notes.txt
        File noteFile;
        FileWriter fw;
        BufferedWriter bw;
        
        try {
            noteFile = new File("notes.txt");
            fw = new FileWriter(noteFile, true);
            bw = new BufferedWriter(fw);
            
            bw.write(subjectText);
            bw.newLine();
            bw.write(noteText);
            bw.newLine();
            bw.close();
            JOptionPane.showMessageDialog(null, "Thank you for adding a note!");
        } catch (IOException e) {
            System.out.println("Error writing to file: " + e);
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        subjectTf.setText(" ");
        noteTf.setText(" ");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        // TODO add your handling code here:

         for(int i = 0; i < count;i++){
            JOptionPane.showMessageDialog(null, "Subject: "+ArrayMath[i].getSubjectText()+"\n Note: "+ArrayMath[i].getNoteText());                       
       //this was my attempt at reading the text fields that were saved back in when the user clicked the
       //Display button. 
       //Here are my two attempts at reading back in a file. 
        
            /*   try
        {
                 try (BufferedReader br = new BufferedReader(new FileReader("notes.txt"))) {
                     while( (subjectText = br.readLine()) != null )
                     {
                         JOptionPane.showMessageDialog (null, "Subject:"+subjectText);
                     }
                     while( (noteText = br.readLine()) != null )
                     {
                         JOptionPane.showMessageDialog (null, "Note:"+noteText);
                     }
                 }
                 
                 
        }
        catch(IOException | HeadlessException e)
        {
        }
        
        //----------------
    

            /**
        File noteFile;
        FileReader fr;
        BufferedReader br;
        
        try{
            noteFile = new File("notes.txt");
            fr = new FileReader (noteFile);
            br = new BufferedReader (fr);
            
            subjectText = br.readLine();
            
            JOptionPane.showMessageDialog(null, "Note loaded successfully.");
            subjectTf.setText(subjectText);
          
        
        }catch(IOException e){
            JOptionPane.showMessageDialog(null,"Error durr"+e);
            
        }
         */                               
    }//GEN-LAST:event_displayButtonActionPerformed
    }
    /**
     * @param args the command line arguments
     */
         public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Notes().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton displayButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel menuBar;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JTextField noteTf;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JTextField subjectTf;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
