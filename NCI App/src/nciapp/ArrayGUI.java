/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nciapp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;



/**
 *
 * @author Conor
 */
public class ArrayGUI extends javax.swing.JFrame {
    
    private String day;
    private int hour;
    private int min;
    private String ampm;
    private String details;
       
    private Array AppArray[];
    private int count;    

    /**
     * Creates new form Computing
     */
    public ArrayGUI() {
        initComponents();
        day = new String();
        hour = 0;
        min = 0;
        ampm = new String();
        details = new String();
        AppArray = new Array[100];
        count = 0;        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ArrayHeader = new javax.swing.JLabel();
        dayLbl = new javax.swing.JLabel();
        dayCb = new javax.swing.JComboBox();
        timeLbl = new javax.swing.JLabel();
        hourCb = new javax.swing.JComboBox();
        minCb = new javax.swing.JComboBox();
        ampmCb = new javax.swing.JComboBox();
        detailsLbl = new javax.swing.JLabel();
        detailsTf = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        displayBtn = new javax.swing.JButton();
        menuRight = new javax.swing.JButton();
        menuMiddle = new javax.swing.JButton();
        menuLeft = new javax.swing.JButton();
        MenuBar = new javax.swing.JLabel();
        Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(374, 535));
        setPreferredSize(new java.awt.Dimension(376, 539));
        getContentPane().setLayout(null);

        ArrayHeader.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        ArrayHeader.setForeground(new java.awt.Color(255, 255, 255));
        ArrayHeader.setText("Appointments");
        getContentPane().add(ArrayHeader);
        ArrayHeader.setBounds(130, 10, 220, 30);

        dayLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        dayLbl.setForeground(new java.awt.Color(255, 255, 255));
        dayLbl.setText("Day:");
        getContentPane().add(dayLbl);
        dayLbl.setBounds(40, 70, 50, 30);

        dayCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        getContentPane().add(dayCb);
        dayCb.setBounds(180, 70, 130, 30);

        timeLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        timeLbl.setForeground(new java.awt.Color(255, 255, 255));
        timeLbl.setText("Time: ");
        getContentPane().add(timeLbl);
        timeLbl.setBounds(40, 140, 50, 23);

        hourCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        getContentPane().add(hourCb);
        hourCb.setBounds(120, 140, 60, 30);

        minCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "10", "20", "30", "40", "50" }));
        getContentPane().add(minCb);
        minCb.setBounds(190, 140, 60, 30);

        ampmCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        getContentPane().add(ampmCb);
        ampmCb.setBounds(260, 140, 60, 30);

        detailsLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        detailsLbl.setForeground(new java.awt.Color(255, 255, 255));
        detailsLbl.setText("Details:");
        getContentPane().add(detailsLbl);
        detailsLbl.setBounds(40, 210, 90, 20);

        detailsTf.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        getContentPane().add(detailsTf);
        detailsTf.setBounds(40, 250, 270, 60);

        addBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn);
        addBtn.setBounds(40, 330, 55, 40);

        clearBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearBtn);
        clearBtn.setBounds(150, 330, 61, 40);

        displayBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        displayBtn.setText("Display");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });
        getContentPane().add(displayBtn);
        displayBtn.setBounds(260, 330, 73, 40);

        menuRight.setContentAreaFilled(false);
        menuRight.setPreferredSize(new java.awt.Dimension(50, 50));
        menuRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRightActionPerformed(evt);
            }
        });
        getContentPane().add(menuRight);
        menuRight.setBounds(310, 450, 50, 50);

        menuMiddle.setContentAreaFilled(false);
        menuMiddle.setPreferredSize(new java.awt.Dimension(50, 50));
        menuMiddle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMiddleActionPerformed(evt);
            }
        });
        getContentPane().add(menuMiddle);
        menuMiddle.setBounds(150, 450, 70, 50);

        menuLeft.setContentAreaFilled(false);
        menuLeft.setPreferredSize(new java.awt.Dimension(50, 50));
        menuLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLeftActionPerformed(evt);
            }
        });
        getContentPane().add(menuLeft);
        menuLeft.setBounds(0, 450, 50, 50);

        MenuBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nciapp/menuBar2.gif"))); // NOI18N
        MenuBar.setText("jLabel1");
        MenuBar.setToolTipText("");
        MenuBar.setPreferredSize(new java.awt.Dimension(360, 50));
        getContentPane().add(MenuBar);
        MenuBar.setBounds(0, 450, 360, 50);

        Wallpaper.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nciapp/wallpaper3.png"))); // NOI18N
        Wallpaper.setMaximumSize(new java.awt.Dimension(412, 500));
        getContentPane().add(Wallpaper);
        Wallpaper.setBounds(0, 0, 360, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLeftActionPerformed
        // TODO add your handling code here:
        GUIOneOnOneSupport mySupport = new GUIOneOnOneSupport();
        mySupport.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuLeftActionPerformed

    private void menuMiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMiddleActionPerformed
        // TODO add your handling code here:
        GUIMainMenu myMainMenu = new GUIMainMenu();
        myMainMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuMiddleActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
        day =(String)dayCb.getSelectedItem();
        hour =Integer.parseInt(hourCb.getSelectedItem().toString());
        min =Integer.parseInt(minCb.getSelectedItem().toString());
        ampm =(String)ampmCb.getSelectedItem();        
        
        details = detailsTf.getText();
        
        Array arr = new Array();
        arr.setDay(day);
        arr.setHour(hour);
        arr.setMin(min);
        arr.setAmpm(ampm);
        arr.setDetails(details);
        
        AppArray[count] = arr;
        count++;   
        
        File noteFile;
        FileWriter fw;
        BufferedWriter bw;
        
          try {
            noteFile = new File("appointment.txt");
            fw = new FileWriter(noteFile, true);
            bw = new BufferedWriter(fw);
            
            bw.write(day);  
            bw.newLine();
            bw.write(new Integer(hour).toString());
            bw.write(new Integer(min).toString());
            bw.write(ampm);
            bw.newLine();            
            bw.write(details);  
            bw.newLine();
            bw.close();
            
            JOptionPane.showMessageDialog(null, "Thank you for adding a note!");
            
        } catch (IOException e) {
                   System.out.println("File input error");
        }         
 
    }//GEN-LAST:event_addBtnActionPerformed

    
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        detailsTf.setText("");        
    }//GEN-LAST:event_clearBtnActionPerformed

    
    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtnActionPerformed
        // TODO add your handling code here:
        for(int i=0; i<count; i++){
            JOptionPane.showMessageDialog (null, "Day: "+AppArray[i].getDay()+"\n Time: "+AppArray[i].getHour()+":"+AppArray[i].getMin()+" "+AppArray[i].getAmpm()+"\n Details: "+AppArray[i].getDetails());
        }  
        
        try
        {        
            BufferedReader br = new BufferedReader(new FileReader("appointment.txt"));
            while( (day = br.readLine()) != null )
            {
                JOptionPane.showMessageDialog (null,day);
            }
            
        br.close();
        }
        catch(Exception e)
        {
            System.out.println("File input error");
        }
        
    }//GEN-LAST:event_displayBtnActionPerformed

    
    private void menuRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRightActionPerformed
        // TODO add your handling code here:
        ArrayGUI myArrayGUI = new ArrayGUI();
        myArrayGUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuRightActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIOneOnOneSupport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIOneOnOneSupport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIOneOnOneSupport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIOneOnOneSupport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new GUIOneOnOneSupport().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArrayHeader;
    private javax.swing.JLabel MenuBar;
    private javax.swing.JLabel Wallpaper;
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox ampmCb;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox dayCb;
    private javax.swing.JLabel dayLbl;
    private javax.swing.JLabel detailsLbl;
    private javax.swing.JTextField detailsTf;
    private javax.swing.JButton displayBtn;
    private javax.swing.JComboBox hourCb;
    private javax.swing.JButton menuLeft;
    private javax.swing.JButton menuMiddle;
    private javax.swing.JButton menuRight;
    private javax.swing.JComboBox minCb;
    private javax.swing.JLabel timeLbl;
    // End of variables declaration//GEN-END:variables
}
